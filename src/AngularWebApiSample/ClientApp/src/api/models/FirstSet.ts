// This file has been AUTOGENERATED by TypeWriter (https://frhagn.github.io/Typewriter/).
// Do not modify it.

export enum FirstSet {
    ValA = 0,
    
    ValB = 1,
    
    SomeOtherVal = 2
}

export namespace FirstSet {
    export function getLabel(value: FirstSet): string {
        var toReturn = '';
        switch(value) {
            case FirstSet.ValA: toReturn = 'ValA'; break;
            
            case FirstSet.ValB: toReturn = 'ValB'; break;
            
            case FirstSet.SomeOtherVal: toReturn = 'ValC'; break;
        }
        return toReturn;
    } 
    export function getKeys(): Array<number> {
        var list = new Array<number>();
        for (var enumMember in FirstSet) { 
            if (!(parseInt(enumMember, 10) >= 0)) {
                  continue;
            }
            list.push(parseInt(enumMember, 10));
        }

        return list;     
    }
}




